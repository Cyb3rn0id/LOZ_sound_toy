

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 07 12:03:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	text8,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12F1572 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  008C                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010C                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0115                     	;# 
    96  0116                     	;# 
    97  0117                     	;# 
    98  0118                     	;# 
    99  0119                     	;# 
   100  011D                     	;# 
   101  011D                     	;# 
   102  018C                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0194                     	;# 
   109  0195                     	;# 
   110  0196                     	;# 
   111  0197                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  028C                     	;# 
   122  030C                     	;# 
   123  038C                     	;# 
   124  0391                     	;# 
   125  0392                     	;# 
   126  0393                     	;# 
   127  0691                     	;# 
   128  0692                     	;# 
   129  0693                     	;# 
   130  0694                     	;# 
   131  0695                     	;# 
   132  0D8E                     	;# 
   133  0D8F                     	;# 
   134  0D90                     	;# 
   135  0D91                     	;# 
   136  0D91                     	;# 
   137  0D92                     	;# 
   138  0D93                     	;# 
   139  0D93                     	;# 
   140  0D94                     	;# 
   141  0D95                     	;# 
   142  0D95                     	;# 
   143  0D96                     	;# 
   144  0D97                     	;# 
   145  0D97                     	;# 
   146  0D98                     	;# 
   147  0D99                     	;# 
   148  0D99                     	;# 
   149  0D9A                     	;# 
   150  0D9B                     	;# 
   151  0D9C                     	;# 
   152  0D9C                     	;# 
   153  0D9D                     	;# 
   154  0D9D                     	;# 
   155  0D9E                     	;# 
   156  0D9F                     	;# 
   157  0DA0                     	;# 
   158  0DA1                     	;# 
   159  0DA1                     	;# 
   160  0DA2                     	;# 
   161  0DA3                     	;# 
   162  0DA3                     	;# 
   163  0DA4                     	;# 
   164  0DA5                     	;# 
   165  0DA5                     	;# 
   166  0DA6                     	;# 
   167  0DA7                     	;# 
   168  0DA7                     	;# 
   169  0DA8                     	;# 
   170  0DA9                     	;# 
   171  0DA9                     	;# 
   172  0DAA                     	;# 
   173  0DAB                     	;# 
   174  0DAC                     	;# 
   175  0DAC                     	;# 
   176  0DAD                     	;# 
   177  0DAD                     	;# 
   178  0DAE                     	;# 
   179  0DAF                     	;# 
   180  0DB0                     	;# 
   181  0DB1                     	;# 
   182  0DB1                     	;# 
   183  0DB2                     	;# 
   184  0DB3                     	;# 
   185  0DB3                     	;# 
   186  0DB4                     	;# 
   187  0DB5                     	;# 
   188  0DB5                     	;# 
   189  0DB6                     	;# 
   190  0DB7                     	;# 
   191  0DB7                     	;# 
   192  0DB8                     	;# 
   193  0DB9                     	;# 
   194  0DB9                     	;# 
   195  0DBA                     	;# 
   196  0DBB                     	;# 
   197  0DBC                     	;# 
   198  0DBC                     	;# 
   199  0DBD                     	;# 
   200  0DBD                     	;# 
   201  0DBE                     	;# 
   202  0DBF                     	;# 
   203  0DC0                     	;# 
   204  0FE4                     	;# 
   205  0FE5                     	;# 
   206  0FE6                     	;# 
   207  0FE7                     	;# 
   208  0FE8                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEA                     	;# 
   213  0FEB                     	;# 
   214  0FED                     	;# 
   215  0FEE                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  008C                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009B                     	;# 
   254  009B                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  010C                     	;# 
   260  0111                     	;# 
   261  0112                     	;# 
   262  0115                     	;# 
   263  0116                     	;# 
   264  0117                     	;# 
   265  0118                     	;# 
   266  0119                     	;# 
   267  011D                     	;# 
   268  011D                     	;# 
   269  018C                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0197                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  028C                     	;# 
   289  030C                     	;# 
   290  038C                     	;# 
   291  0391                     	;# 
   292  0392                     	;# 
   293  0393                     	;# 
   294  0691                     	;# 
   295  0692                     	;# 
   296  0693                     	;# 
   297  0694                     	;# 
   298  0695                     	;# 
   299  0D8E                     	;# 
   300  0D8F                     	;# 
   301  0D90                     	;# 
   302  0D91                     	;# 
   303  0D91                     	;# 
   304  0D92                     	;# 
   305  0D93                     	;# 
   306  0D93                     	;# 
   307  0D94                     	;# 
   308  0D95                     	;# 
   309  0D95                     	;# 
   310  0D96                     	;# 
   311  0D97                     	;# 
   312  0D97                     	;# 
   313  0D98                     	;# 
   314  0D99                     	;# 
   315  0D99                     	;# 
   316  0D9A                     	;# 
   317  0D9B                     	;# 
   318  0D9C                     	;# 
   319  0D9C                     	;# 
   320  0D9D                     	;# 
   321  0D9D                     	;# 
   322  0D9E                     	;# 
   323  0D9F                     	;# 
   324  0DA0                     	;# 
   325  0DA1                     	;# 
   326  0DA1                     	;# 
   327  0DA2                     	;# 
   328  0DA3                     	;# 
   329  0DA3                     	;# 
   330  0DA4                     	;# 
   331  0DA5                     	;# 
   332  0DA5                     	;# 
   333  0DA6                     	;# 
   334  0DA7                     	;# 
   335  0DA7                     	;# 
   336  0DA8                     	;# 
   337  0DA9                     	;# 
   338  0DA9                     	;# 
   339  0DAA                     	;# 
   340  0DAB                     	;# 
   341  0DAC                     	;# 
   342  0DAC                     	;# 
   343  0DAD                     	;# 
   344  0DAD                     	;# 
   345  0DAE                     	;# 
   346  0DAF                     	;# 
   347  0DB0                     	;# 
   348  0DB1                     	;# 
   349  0DB1                     	;# 
   350  0DB2                     	;# 
   351  0DB3                     	;# 
   352  0DB3                     	;# 
   353  0DB4                     	;# 
   354  0DB5                     	;# 
   355  0DB5                     	;# 
   356  0DB6                     	;# 
   357  0DB7                     	;# 
   358  0DB7                     	;# 
   359  0DB8                     	;# 
   360  0DB9                     	;# 
   361  0DB9                     	;# 
   362  0DBA                     	;# 
   363  0DBB                     	;# 
   364  0DBC                     	;# 
   365  0DBC                     	;# 
   366  0DBD                     	;# 
   367  0DBD                     	;# 
   368  0DBE                     	;# 
   369  0DBF                     	;# 
   370  0DC0                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE8                     	;# 
   377  0FE9                     	;# 
   378  0FEA                     	;# 
   379  0FEA                     	;# 
   380  0FEB                     	;# 
   381  0FED                     	;# 
   382  0FEE                     	;# 
   383  0FEE                     	;# 
   384  0FEF                     	;# 
   385  000C                     _PORTAbits	set	12
   386  000C                     _PORTA	set	12
   387  008D                     _RCIF	set	141
   388  008C                     _TXIF	set	140
   389  0099                     _OSCCONbits	set	153
   390  0095                     _OPTION_REGbits	set	149
   391  008C                     _TRISA	set	140
   392  011D                     _APFCON	set	285
   393  019C                     _SPBRGH	set	412
   394  019B                     _SPBRGL	set	411
   395  019E                     _TXSTAbits	set	414
   396  019D                     _RCSTAbits	set	413
   397  019F                     _BAUDCONbits	set	415
   398  0199                     _RCREG	set	409
   399  019A                     _TXREG	set	410
   400  018C                     _ANSELA	set	396
   401  020C                     _WPUA	set	524
   402  028C                     _ODCONA	set	652
   403                           
   404                           ; #config settings
   405  0000                     
   406                           	psect	cinit
   407  07FE                     start_initialization:	
   408  07FE                     __initialization:	
   409  07FE                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  07FE                     __end_of__initialization:	
   413  07FE  0020               	movlb	0
   414  07FF  2FB1               	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	cstackCOMMON
   417  0070                     __pcstackCOMMON:	
   418  0070                     ?_usart_init:	
   419  0070                     ??_usart_init:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_mp3s_init:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_putch:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_putch:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_mp3s_setVolume:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_system_init:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_system_init:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     putch@byte:	
   444                           ; 1 bytes @ 0x0
   445                           
   446                           
   447                           ; 1 bytes @ 0x0
   448  0070                     	ds	1
   449  0071                     ?__mp3s_w2:	
   450  0071                     ?__mp3s_w3:	
   451                           ; 1 bytes @ 0x1
   452                           
   453  0071                     __mp3s_w2@d:	
   454                           ; 1 bytes @ 0x1
   455                           
   456  0071                     __mp3s_w3@d:	
   457                           ; 1 bytes @ 0x1
   458                           
   459                           
   460                           ; 2 bytes @ 0x1
   461  0071                     	ds	1
   462  0072                     ??__mp3s_w2:	
   463  0072                     __mp3s_w2@c:	
   464                           ; 1 bytes @ 0x2
   465                           
   466                           
   467                           ; 1 bytes @ 0x2
   468  0072                     	ds	1
   469  0073                     ??_mp3s_setVolume:	
   470  0073                     ??__mp3s_w3:	
   471                           ; 1 bytes @ 0x3
   472                           
   473  0073                     __mp3s_w3@c:	
   474                           ; 1 bytes @ 0x3
   475                           
   476                           
   477                           ; 1 bytes @ 0x3
   478  0073                     	ds	1
   479  0074                     ?_mp3s_playIndex:	
   480  0074                     mp3s_setVolume@v:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0074                     mp3s_playIndex@i:	
   484                           ; 1 bytes @ 0x4
   485                           
   486                           
   487                           ; 2 bytes @ 0x4
   488  0074                     	ds	1
   489  0075                     ??_mp3s_init:	
   490  0075                     mp3s_init@v:	
   491                           ; 1 bytes @ 0x5
   492                           
   493                           
   494                           ; 1 bytes @ 0x5
   495  0075                     	ds	1
   496  0076                     ??_mp3s_playIndex:	
   497  0076                     ??_main:	
   498                           ; 1 bytes @ 0x6
   499                           
   500                           
   501                           ; 1 bytes @ 0x6
   502  0076                     	ds	2
   503  0078                     main@c:	
   504                           
   505                           ; 1 bytes @ 0x8
   506  0078                     	ds	1
   507                           
   508                           	psect	maintext
   509  07B1                     __pmaintext:	
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 51 in file "main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  c               1    8[COMMON] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0, pclath, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : B1F/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   529 ;;      Params:         0       0       0       0
   530 ;;      Locals:         1       0       0       0
   531 ;;      Temps:          2       0       0       0
   532 ;;      Totals:         3       0       0       0
   533 ;;Total ram usage:        3 bytes
   534 ;; Hardware stack levels required when called:    4
   535 ;; This function calls:
   536 ;;		_mp3s_init
   537 ;;		_mp3s_playIndex
   538 ;;		_system_init
   539 ;;		_usart_init
   540 ;; This function is called by:
   541 ;;		Startup code after reset
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _main
   547  07B1                     _main:	
   548                           
   549                           ;main.c: 53: system_init();
   550                           
   551                           ;incstack = 0
   552                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   553  07B1  279B               	fcall	_system_init
   554                           
   555                           ;main.c: 54: usart_init();
   556  07B2  2788               	fcall	_usart_init
   557                           
   558                           ;main.c: 55: _delay((unsigned long)((20)*(16000000/4000.0)));
   559  07B3  3068               	movlw	104
   560  07B4  00F6               	movwf	??_main
   561  07B5  30E4               	movlw	228
   562  07B6                     u177:	
   563  07B6  0B89               	decfsz	9,f
   564  07B7  2FB6               	goto	u177
   565  07B8  0BF6               	decfsz	??_main,f
   566  07B9  2FB6               	goto	u177
   567  07BA  3200               	nop2
   568                           
   569                           ;main.c: 56: mp3s_init(0x08);
   570  07BB  3008               	movlw	8
   571  07BC  2766               	fcall	_mp3s_init
   572                           
   573                           ;main.c: 57: _delay((unsigned long)((200)*(16000000/4000.0)));
   574  07BD  3005               	movlw	5
   575  07BE  00F7               	movwf	??_main+1
   576  07BF  300F               	movlw	15
   577  07C0  00F6               	movwf	??_main
   578  07C1  30F1               	movlw	241
   579  07C2                     u187:	
   580  07C2  0B89               	decfsz	9,f
   581  07C3  2FC2               	goto	u187
   582  07C4  0BF6               	decfsz	??_main,f
   583  07C5  2FC2               	goto	u187
   584  07C6  0BF7               	decfsz	??_main+1,f
   585  07C7  2FC2               	goto	u187
   586  07C8  0000               	nop
   587  07C9                     l630:	
   588                           ;main.c: 59: while(1)
   589                           
   590                           
   591                           ;main.c: 60: {
   592                           ;main.c: 64: if ((PORTA & 0b00111110) != 0b00111110)
   593  07C9  303E               	movlw	62
   594  07CA  0020               	movlb	0	; select bank0
   595  07CB  050C               	andwf	12,w	;volatile
   596  07CC  00F6               	movwf	??_main
   597  07CD  303E               	movlw	62
   598  07CE  0676               	xorwf	??_main,w
   599  07CF  1903               	btfsc	3,2
   600  07D0  2FC9               	goto	l630
   601                           
   602                           ;main.c: 65: {
   603                           ;main.c: 66: if (PORTAbits.RA1==0)
   604  07D1  188C               	btfsc	12,1	;volatile
   605  07D2  2FD5               	goto	l36
   606                           
   607                           ;main.c: 67: {
   608                           ;main.c: 68: mp3s_playIndex(1);
   609  07D3  3001               	movlw	1
   610  07D4  2FE4               	goto	L1
   611  07D5                     l36:	
   612                           ;main.c: 69: }
   613                           
   614                           
   615                           ;main.c: 70: else if (PORTAbits.RA2==0)
   616  07D5  190C               	btfsc	12,2	;volatile
   617  07D6  2FD9               	goto	l38
   618                           
   619                           ;main.c: 71: {
   620                           ;main.c: 72: mp3s_playIndex(2);
   621  07D7  3002               	movlw	2
   622  07D8  2FE4               	goto	L1
   623  07D9                     l38:	
   624                           ;main.c: 73: }
   625                           
   626                           
   627                           ;main.c: 74: else if (PORTAbits.RA3==0)
   628  07D9  198C               	btfsc	12,3	;volatile
   629  07DA  2FDD               	goto	l40
   630                           
   631                           ;main.c: 75: {
   632                           ;main.c: 76: mp3s_playIndex(3);
   633  07DB  3003               	movlw	3
   634  07DC  2FE4               	goto	L1
   635  07DD                     l40:	
   636                           ;main.c: 77: }
   637                           
   638                           
   639                           ;main.c: 78: else if (PORTAbits.RA4==0)
   640  07DD  1A0C               	btfsc	12,4	;volatile
   641  07DE  2FE1               	goto	l42
   642                           
   643                           ;main.c: 79: {
   644                           ;main.c: 80: mp3s_playIndex(4);
   645  07DF  3004               	movlw	4
   646  07E0  2FE4               	goto	L1
   647  07E1                     l42:	
   648                           ;main.c: 81: }
   649                           
   650                           
   651                           ;main.c: 82: else if (PORTAbits.RA5==0)
   652  07E1  1A8C               	btfsc	12,5	;volatile
   653  07E2  2FE8               	goto	l644
   654                           
   655                           ;main.c: 83: {
   656                           ;main.c: 84: mp3s_playIndex(5);
   657  07E3  3005               	movlw	5
   658  07E4                     L1:	
   659  07E4  00F4               	movwf	mp3s_playIndex@i
   660  07E5  3000               	movlw	0
   661  07E6  00F5               	movwf	mp3s_playIndex@i+1
   662  07E7  274F               	fcall	_mp3s_playIndex
   663  07E8                     l644:	
   664                           
   665                           ;main.c: 85: }
   666                           ;main.c: 87: uint8_t c=10;
   667  07E8  300A               	movlw	10
   668  07E9  00F6               	movwf	??_main
   669  07EA  0876               	movf	??_main,w
   670  07EB  00F8               	movwf	main@c
   671  07EC                     l648:	
   672                           ;main.c: 88: while (c--)
   673                           
   674  07EC  3001               	movlw	1
   675  07ED  02F8               	subwf	main@c,f
   676  07EE  0A78               	incf	main@c,w
   677  07EF  1903               	btfsc	3,2
   678  07F0  2FC9               	goto	l630
   679                           
   680                           ;main.c: 89: {
   681                           ;main.c: 90: _delay((unsigned long)((200)*(16000000/4000.0)));
   682  07F1  3005               	movlw	5
   683  07F2  00F7               	movwf	??_main+1
   684  07F3  300F               	movlw	15
   685  07F4  00F6               	movwf	??_main
   686  07F5  30F1               	movlw	241
   687  07F6                     u197:	
   688  07F6  0B89               	decfsz	9,f
   689  07F7  2FF6               	goto	u197
   690  07F8  0BF6               	decfsz	??_main,f
   691  07F9  2FF6               	goto	u197
   692  07FA  0BF7               	decfsz	??_main+1,f
   693  07FB  2FF6               	goto	u197
   694  07FC  0000               	nop
   695  07FD  2FEC               	goto	l648
   696  07FE                     __end_of_main:	
   697                           
   698                           	psect	text1
   699  0788                     __ptext1:	
   700 ;; *************** function _usart_init *****************
   701 ;; Defined at:
   702 ;;		line 31 in file "usart.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   716 ;;      Params:         0       0       0       0
   717 ;;      Locals:         0       0       0       0
   718 ;;      Temps:          0       0       0       0
   719 ;;      Totals:         0       0       0       0
   720 ;;Total ram usage:        0 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _usart_init
   731  0788                     _usart_init:	
   732                           
   733                           ;usart.c: 33: BAUDCONbits.ABDEN=0;
   734                           
   735                           ;incstack = 0
   736                           ; Regs used in _usart_init: [wreg+status,2]
   737  0788  0023               	movlb	3	; select bank3
   738  0789  101F               	bcf	31,0	;volatile
   739                           
   740                           ;usart.c: 34: BAUDCONbits.ABDOVF=0;
   741  078A  139F               	bcf	31,7	;volatile
   742                           
   743                           ;usart.c: 35: BAUDCONbits.BRG16=0;
   744  078B  119F               	bcf	31,3	;volatile
   745                           
   746                           ;usart.c: 36: BAUDCONbits.SCKP=0;
   747  078C  121F               	bcf	31,4	;volatile
   748                           
   749                           ;usart.c: 37: BAUDCONbits.WUE=0;
   750  078D  109F               	bcf	31,1	;volatile
   751                           
   752                           ;usart.c: 39: RCSTAbits.ADDEN=0;
   753  078E  119D               	bcf	29,3	;volatile
   754                           
   755                           ;usart.c: 40: RCSTAbits.CREN=0;
   756  078F  121D               	bcf	29,4	;volatile
   757                           
   758                           ;usart.c: 41: RCSTAbits.RX9=0;
   759  0790  131D               	bcf	29,6	;volatile
   760                           
   761                           ;usart.c: 42: RCSTAbits.SPEN=1;
   762  0791  179D               	bsf	29,7	;volatile
   763                           
   764                           ;usart.c: 44: TXSTAbits.BRGH=1;
   765  0792  151E               	bsf	30,2	;volatile
   766                           
   767                           ;usart.c: 45: TXSTAbits.SENDB=0;
   768  0793  119E               	bcf	30,3	;volatile
   769                           
   770                           ;usart.c: 46: TXSTAbits.SYNC=0;
   771  0794  121E               	bcf	30,4	;volatile
   772                           
   773                           ;usart.c: 47: TXSTAbits.TX9=0;
   774  0795  131E               	bcf	30,6	;volatile
   775                           
   776                           ;usart.c: 48: TXSTAbits.TXEN=1;
   777  0796  169E               	bsf	30,5	;volatile
   778                           
   779                           ;usart.c: 51: SPBRGL=(int)(((long)16000000-(long)9600)/(16*(long)9600)) & 0xFF;
   780  0797  3068               	movlw	104
   781  0798  009B               	movwf	27	;volatile
   782                           
   783                           ;usart.c: 52: SPBRGH=(int)(((long)16000000-(long)9600)/(16*(long)9600)) << 8;
   784  0799  019C               	clrf	28	;volatile
   785  079A  0008               	return
   786  079B                     __end_of_usart_init:	
   787                           
   788                           	psect	text2
   789  079B                     __ptext2:	
   790 ;; *************** function _system_init *****************
   791 ;; Defined at:
   792 ;;		line 36 in file "main.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   806 ;;      Params:         0       0       0       0
   807 ;;      Locals:         0       0       0       0
   808 ;;      Temps:          0       0       0       0
   809 ;;      Totals:         0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _system_init
   821  079B                     _system_init:	
   822                           
   823                           ;main.c: 38: ANSELA=0;
   824                           
   825                           ;incstack = 0
   826                           ; Regs used in _system_init: [wreg+status,2+status,0]
   827  079B  0023               	movlb	3	; select bank3
   828  079C  018C               	clrf	12	;volatile
   829                           
   830                           ;main.c: 39: TRISA=0x3F;
   831  079D  303F               	movlw	63
   832  079E  0021               	movlb	1	; select bank1
   833  079F  008C               	movwf	12	;volatile
   834                           
   835                           ;main.c: 40: OPTION_REGbits.nWPUEN=0;
   836  07A0  1395               	bcf	21,7	;volatile
   837                           
   838                           ;main.c: 41: WPUA=0xFF;
   839  07A1  30FF               	movlw	255
   840  07A2  0024               	movlb	4	; select bank4
   841  07A3  008C               	movwf	12	;volatile
   842                           
   843                           ;main.c: 42: ODCONA=0;
   844  07A4  0025               	movlb	5	; select bank5
   845  07A5  018C               	clrf	12	;volatile
   846                           
   847                           ;main.c: 43: APFCON=0;
   848  07A6  0022               	movlb	2	; select bank2
   849  07A7  019D               	clrf	29	;volatile
   850                           
   851                           ;main.c: 46: OSCCONbits.SPLLEN=0;
   852  07A8  0021               	movlb	1	; select bank1
   853  07A9  1399               	bcf	25,7	;volatile
   854                           
   855                           ;main.c: 47: OSCCONbits.IRCF=0b1111;
   856  07AA  3078               	movlw	120
   857  07AB  0499               	iorwf	25,f	;volatile
   858                           
   859                           ;main.c: 48: OSCCONbits.SCS=0b10;
   860  07AC  0819               	movf	25,w	;volatile
   861  07AD  39FC               	andlw	-4
   862  07AE  3802               	iorlw	2
   863  07AF  0099               	movwf	25	;volatile
   864  07B0  0008               	return
   865  07B1                     __end_of_system_init:	
   866                           
   867                           	psect	text3
   868  074F                     __ptext3:	
   869 ;; *************** function _mp3s_playIndex *****************
   870 ;; Defined at:
   871 ;;		line 52 in file "mp3serial.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  i               2    4[COMMON] unsigned int 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, pclath, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   885 ;;      Params:         2       0       0       0
   886 ;;      Locals:         0       0       0       0
   887 ;;      Temps:          0       0       0       0
   888 ;;      Totals:         2       0       0       0
   889 ;;Total ram usage:        2 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    2
   892 ;; This function calls:
   893 ;;		__mp3s_w3
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function _mp3s_playIndex
   901  074F                     _mp3s_playIndex:	
   902                           
   903                           ;mp3serial.c: 54: _mp3s_w3(0x41, i);
   904                           
   905                           ;incstack = 0
   906                           ; Regs used in _mp3s_playIndex: [wreg+status,2+status,0+pclath+cstack]
   907  074F  0875               	movf	mp3s_playIndex@i+1,w
   908  0750  00F2               	movwf	__mp3s_w3@d+1
   909  0751  0874               	movf	mp3s_playIndex@i,w
   910  0752  00F1               	movwf	__mp3s_w3@d
   911  0753  3041               	movlw	65
   912  0754  277A               	fcall	__mp3s_w3
   913  0755  0008               	return
   914  0756                     __end_of_mp3s_playIndex:	
   915                           
   916                           	psect	text4
   917  077A                     __ptext4:	
   918 ;; *************** function __mp3s_w3 *****************
   919 ;; Defined at:
   920 ;;		line 30 in file "mp3serial.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  c               1    wreg     unsigned char 
   923 ;;  d               2    1[COMMON] unsigned int 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  c               1    3[COMMON] unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0, pclath, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   935 ;;      Params:         2       0       0       0
   936 ;;      Locals:         1       0       0       0
   937 ;;      Temps:          0       0       0       0
   938 ;;      Totals:         3       0       0       0
   939 ;;Total ram usage:        3 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    1
   942 ;; This function calls:
   943 ;;		_putch
   944 ;; This function is called by:
   945 ;;		_mp3s_playIndex
   946 ;;		_mp3s_playWithVolume
   947 ;;		_mp3s_injectSong
   948 ;;		_mp3s_playFromFolder
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function __mp3s_w3
   954  077A                     __mp3s_w3:	
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in __mp3s_w3: [wreg+status,2+status,0+pclath+cstack]
   958                           ;__mp3s_w3@c stored from wreg
   959  077A  00F3               	movwf	__mp3s_w3@c
   960                           
   961                           ;mp3serial.c: 32: putch(0x7E);
   962  077B  307E               	movlw	126
   963  077C  2756               	fcall	_putch
   964                           
   965                           ;mp3serial.c: 33: putch(4);
   966  077D  3004               	movlw	4
   967  077E  2756               	fcall	_putch
   968                           
   969                           ;mp3serial.c: 34: putch(c);
   970  077F  0873               	movf	__mp3s_w3@c,w
   971  0780  2756               	fcall	_putch
   972                           
   973                           ;mp3serial.c: 35: putch((uint8_t)(d>>8));
   974  0781  0872               	movf	__mp3s_w3@d+1,w
   975  0782  2756               	fcall	_putch
   976                           
   977                           ;mp3serial.c: 36: putch((uint8_t) d);
   978  0783  0871               	movf	__mp3s_w3@d,w
   979  0784  2756               	fcall	_putch
   980                           
   981                           ;mp3serial.c: 37: putch(0xEF);
   982  0785  30EF               	movlw	239
   983  0786  2756               	fcall	_putch
   984  0787  0008               	return
   985  0788                     __end_of__mp3s_w3:	
   986                           
   987                           	psect	text5
   988  0766                     __ptext5:	
   989 ;; *************** function _mp3s_init *****************
   990 ;; Defined at:
   991 ;;		line 40 in file "mp3serial.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  v               1    wreg     unsigned char 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  v               1    5[COMMON] unsigned char 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0, pclath, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1005 ;;      Params:         0       0       0       0
  1006 ;;      Locals:         1       0       0       0
  1007 ;;      Temps:          0       0       0       0
  1008 ;;      Totals:         1       0       0       0
  1009 ;;Total ram usage:        1 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    3
  1012 ;; This function calls:
  1013 ;;		__mp3s_w2
  1014 ;;		_mp3s_setVolume
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           
  1021                           ;psect for function _mp3s_init
  1022  0766                     _mp3s_init:	
  1023                           
  1024                           ;incstack = 0
  1025                           ; Regs used in _mp3s_init: [wreg+status,2+status,0+pclath+cstack]
  1026                           ;mp3s_init@v stored from wreg
  1027  0766  00F5               	movwf	mp3s_init@v
  1028                           
  1029                           ;mp3serial.c: 42: _mp3s_w2(0x35,0x01);
  1030  0767  01F1               	clrf	__mp3s_w2@d
  1031  0768  0AF1               	incf	__mp3s_w2@d,f
  1032  0769  3035               	movlw	53
  1033  076A  276E               	fcall	__mp3s_w2
  1034                           
  1035                           ;mp3serial.c: 43: mp3s_setVolume(v);
  1036  076B  0875               	movf	mp3s_init@v,w
  1037  076C  275E               	fcall	_mp3s_setVolume
  1038  076D  0008               	return
  1039  076E                     __end_of_mp3s_init:	
  1040                           
  1041                           	psect	text6
  1042  075E                     __ptext6:	
  1043 ;; *************** function _mp3s_setVolume *****************
  1044 ;; Defined at:
  1045 ;;		line 46 in file "mp3serial.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  v               1    wreg     unsigned char 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  v               1    4[COMMON] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1059 ;;      Params:         0       0       0       0
  1060 ;;      Locals:         1       0       0       0
  1061 ;;      Temps:          1       0       0       0
  1062 ;;      Totals:         2       0       0       0
  1063 ;;Total ram usage:        2 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    2
  1066 ;; This function calls:
  1067 ;;		__mp3s_w2
  1068 ;; This function is called by:
  1069 ;;		_mp3s_init
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _mp3s_setVolume
  1075  075E                     _mp3s_setVolume:	
  1076                           
  1077                           ;incstack = 0
  1078                           ; Regs used in _mp3s_setVolume: [wreg+status,2+status,0+pclath+cstack]
  1079                           ;mp3s_setVolume@v stored from wreg
  1080  075E  00F4               	movwf	mp3s_setVolume@v
  1081                           
  1082                           ;mp3serial.c: 48: _mp3s_w2(0x31, v);
  1083  075F  0874               	movf	mp3s_setVolume@v,w
  1084  0760  00F3               	movwf	??_mp3s_setVolume
  1085  0761  0873               	movf	??_mp3s_setVolume,w
  1086  0762  00F1               	movwf	__mp3s_w2@d
  1087  0763  3031               	movlw	49
  1088  0764  276E               	fcall	__mp3s_w2
  1089  0765  0008               	return
  1090  0766                     __end_of_mp3s_setVolume:	
  1091                           
  1092                           	psect	text7
  1093  076E                     __ptext7:	
  1094 ;; *************** function __mp3s_w2 *****************
  1095 ;; Defined at:
  1096 ;;		line 21 in file "mp3serial.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  c               1    wreg     unsigned char 
  1099 ;;  d               1    1[COMMON] unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  c               1    2[COMMON] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, pclath, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1111 ;;      Params:         1       0       0       0
  1112 ;;      Locals:         1       0       0       0
  1113 ;;      Temps:          0       0       0       0
  1114 ;;      Totals:         2       0       0       0
  1115 ;;Total ram usage:        2 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    1
  1118 ;; This function calls:
  1119 ;;		_putch
  1120 ;; This function is called by:
  1121 ;;		_mp3s_init
  1122 ;;		_mp3s_setVolume
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           
  1127                           ;psect for function __mp3s_w2
  1128  076E                     __mp3s_w2:	
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in __mp3s_w2: [wreg+status,2+status,0+pclath+cstack]
  1132                           ;__mp3s_w2@c stored from wreg
  1133  076E  00F2               	movwf	__mp3s_w2@c
  1134                           
  1135                           ;mp3serial.c: 23: putch(0x7E);
  1136  076F  307E               	movlw	126
  1137  0770  2756               	fcall	_putch
  1138                           
  1139                           ;mp3serial.c: 24: putch(3);
  1140  0771  3003               	movlw	3
  1141  0772  2756               	fcall	_putch
  1142                           
  1143                           ;mp3serial.c: 25: putch(c);
  1144  0773  0872               	movf	__mp3s_w2@c,w
  1145  0774  2756               	fcall	_putch
  1146                           
  1147                           ;mp3serial.c: 26: putch(d);
  1148  0775  0871               	movf	__mp3s_w2@d,w
  1149  0776  2756               	fcall	_putch
  1150                           
  1151                           ;mp3serial.c: 27: putch(0xEF);
  1152  0777  30EF               	movlw	239
  1153  0778  2756               	fcall	_putch
  1154  0779  0008               	return
  1155  077A                     __end_of__mp3s_w2:	
  1156                           
  1157                           	psect	text8
  1158  0756                     __ptext8:	
  1159 ;; *************** function _putch *****************
  1160 ;; Defined at:
  1161 ;;		line 15 in file "usart.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  byte            1    wreg     unsigned char 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  byte            1    0[COMMON] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1175 ;;      Params:         0       0       0       0
  1176 ;;      Locals:         1       0       0       0
  1177 ;;      Temps:          0       0       0       0
  1178 ;;      Totals:         1       0       0       0
  1179 ;;Total ram usage:        1 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		__mp3s_w2
  1185 ;;		__mp3s_w3
  1186 ;;		__mp3s_w1
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _putch
  1192  0756                     _putch:	
  1193                           
  1194                           ;incstack = 0
  1195                           ; Regs used in _putch: [wreg]
  1196                           ;putch@byte stored from wreg
  1197  0756  00F0               	movwf	putch@byte
  1198  0757                     l132:	
  1199                           ;usart.c: 19: continue;
  1200                           
  1201                           ;usart.c: 18: while(!TXIF)
  1202                           
  1203  0757  0020               	movlb	0	; select bank0
  1204  0758  1E11               	btfss	17,4	;volatile
  1205  0759  2F57               	goto	l132
  1206                           
  1207                           ;usart.c: 20: TXREG = byte;
  1208  075A  0870               	movf	putch@byte,w
  1209  075B  0023               	movlb	3	; select bank3
  1210  075C  009A               	movwf	26	;volatile
  1211  075D  0008               	return
  1212  075E                     __end_of_putch:	
  1213  007E                     btemp	set	126	;btemp
  1214  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_mp3s_init
    _main->_mp3s_playIndex
    _mp3s_playIndex->__mp3s_w3
    __mp3s_w3->_putch
    _mp3s_init->_mp3s_setVolume
    _mp3s_setVolume->__mp3s_w2
    __mp3s_w2->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     847
                                              6 COMMON     3     3      0
                          _mp3s_init
                     _mp3s_playIndex
                        _system_init
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mp3s_playIndex                                       2     0      2     490
                                              4 COMMON     2     0      2
                           __mp3s_w3
 ---------------------------------------------------------------------------------
 (2) __mp3s_w3                                             3     1      2     253
                                              1 COMMON     3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _mp3s_init                                            1     1      0     334
                                              5 COMMON     1     1      0
                           __mp3s_w2
                     _mp3s_setVolume
 ---------------------------------------------------------------------------------
 (2) _mp3s_setVolume                                       2     2      0     167
                                              3 COMMON     2     2      0
                           __mp3s_w2
 ---------------------------------------------------------------------------------
 (3) __mp3s_w2                                             2     1      1     145
                                              1 COMMON     2     1      1
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mp3s_init
     __mp3s_w2
       _putch
     _mp3s_setVolume
       __mp3s_w2
         _putch
   _mp3s_playIndex
     __mp3s_w3
       _putch
   _system_init
   _usart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 07 12:03:32 2018

            __CFG_CP$OFF 0000                       l40 07DD                       l42 07E1  
                     l36 07D5                       l38 07D9      __end_of_system_init 07B1  
                    l132 0757                      l630 07C9                      l644 07E8  
                    l648 07EC                      u177 07B6                      u187 07C2  
                    u197 07F6             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     _RCIF 008D                     _TXIF 008C  
                   _WPUA 020C             __CFG_WRT$OFF 0000                     _main 07B1  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0001  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _RCREG 0199  
                  _PORTA 000C                    _TRISA 008C                    _TXREG 019A  
          __CFG_PWRTE$ON 0000                    _putch 0756                    main@c 0078  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07FE              _system_init 079B             __end_of_main 07FE  
                 ??_main 0076           __CFG_PLLEN$OFF 0000                   _APFCON 011D  
                 _ANSELA 018C                   ?_putch 0070         __end_of__mp3s_w2 077A  
       __end_of__mp3s_w3 0788                   _ODCONA 028C                   _SPBRGH 019C  
                 _SPBRGL 019B           __CFG_STVREN$ON 0000  __end_of__initialization 07FE  
         __pcstackCOMMON 0070  __size_of_mp3s_playIndex 0007               __mp3s_w2@c 0072  
             __mp3s_w2@d 0071               __mp3s_w3@c 0073               __mp3s_w3@d 0071  
          __end_of_putch 075E  __size_of_mp3s_setVolume 0008       __size_of_mp3s_init 0008  
         _OPTION_REGbits 0095                  ??_putch 0070               __pmaintext 07B1  
              ?__mp3s_w2 0071                ?__mp3s_w3 0071        __end_of_mp3s_init 076E  
           ?_system_init 0070               ??__mp3s_w2 0072               ??__mp3s_w3 0073  
                __ptext1 0788                  __ptext2 079B                  __ptext3 074F  
                __ptext4 077A                  __ptext5 0766                  __ptext6 075E  
                __ptext7 076E                  __ptext8 0756     end_of_initialization 07FE  
             mp3s_init@v 0075           _mp3s_playIndex 074F                _RCSTAbits 019D  
         _mp3s_setVolume 075E                _PORTAbits 000C         __CFG_FOSC$INTOSC 0000  
              _TXSTAbits 019E               _usart_init 0788   __end_of_mp3s_playIndex 0756  
 __end_of_mp3s_setVolume 0766              _BAUDCONbits 019F      start_initialization 07FE  
        ?_mp3s_playIndex 0074         __CFG_LPBOREN$OFF 0000          ?_mp3s_setVolume 0070  
   __size_of_system_init 0016        __size_of__mp3s_w2 000C        __size_of__mp3s_w3 000E  
              ___latbits 0000              ?_usart_init 0070                _mp3s_init 0766  
         __size_of_putch 0008               ?_mp3s_init 0070      __size_of_usart_init 0013  
               __mp3s_w2 076E                 __mp3s_w3 077A         ??_mp3s_playIndex 0076  
          __size_of_main 004D         ??_mp3s_setVolume 0073              ??_mp3s_init 0075  
              putch@byte 0070        __CFG_CLKOUTEN$OFF 0000             ??_usart_init 0070  
             _OSCCONbits 0099            ??_system_init 0070          mp3s_playIndex@i 0074  
     __end_of_usart_init 079B          mp3s_setVolume@v 0074  
